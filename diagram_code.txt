@startuml
class MainController { 
Главный класс программы
==
    - curmonth: Int
    - cur_networth: Int 
    - cur_profit: Int 
    - cur_loss: Int 

    - tax_percent: Int
    - tax_value: Int 

    - auto_sold: Int
    - estate_sold: Int
    - med_sold: Int
    
    - ins_company: InsuranceComp

    + run() : void
    + reset() : void
    + update_sell(sell_stats:Map[Str][Tuple[Int,Int]]) - учёт продажи страховок
    + simulate_month() : void
    

}

class InsuranceComp{
Класс страховой компании
==
    Базовые спросы
    - auto_base : Int 
    - estate_base : Int
    - med_base : Int 
    

    Флаги позволяющие отслеживать изменения условий страховых программ
    - auto_config_updated : bool
    - estate_config_updated : bool
    - med_config_updated : bool

    Id актуальных страховых программ каждого типа
    - self.cur_autoprog_id : Int 
    - self.cur_estateprog_id : Int 
    - self.cur_medprog_id : Int 
    - self.last_program_id : Int

    Условия страховых программ
    - auto_price: Int
    - auto_time: Int
    - auto_refund: Int 
    - estate_price: Int
    - estate_time: Int
    - estate_refund : Int
    - med_price: Int
    - med_time: Int
    - med_refund : Int

    - client_number: Int - общее число клиентов 
    - ins_progs_active: List[Int] - id действующих страховых программ (по которым еще есть неистекшие договора)
    - ins_progs: Map[Int][InsuranceAgreement] - пары(id страхового договора, страх договор)

    + init_state() : void
    + update_client_state(auto_demand:int,estate_demand:int,med_demand:int) : void - добавл. новых клиентов
    + update_dates() : void
    + add_ins_agr(prog_id:int,ins_agr: InsuranceAgreement) : void
    + reset() : void
    + reset_programs() : void
    + gen_ins_cases() : Map[Str][Int]
    + gen_demand() : Map[str][Int] - (колво купл. страховок, прибыль) по каждому типу страховки
}


class InsuranceAgreement{
Класс страхового договора
==
    - program_id: Int
    - program_type: Str
    - program_price: Int
    - program_time: Int 
    - program_refund: Int

    - has_clients: bool
    - client_list: List[Int]
    
    + add_clients(client_arr:List[Int]) : void
    + update_dates() : int - количество клиентов расторгнувших договор
    + gen_insurance_cases() : Int - сумма выплат по данному договору на данной итерации    
}

MainController "1" --> "1" InsuranceComp
InsuranceComp "1" --> "many" InsuranceAgreement

@enduml